/*
 * Radarr
 * The way users should interact with Radarr programatically. To utilize any of these endpoints you will need a few pieces of information:  ex: localhost:7878/api/v3/movies?apiKey={key_here}  * url: localhost, 10.1.0.1, 192.168.1.1, etc * port: 7878 (unless you modify it) * apiKey: Located in Settings > General > Security
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package de.codemakers.radarr4j.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.codemakers.radarr4j.model.QualityProfileFormatItems;
import de.codemakers.radarr4j.model.QueuedetailsLanguages;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * QualityProfile
 */

public class QualityProfile {
  @SerializedName("name")
  private String name = null;

  @SerializedName("upgradeAllowed")
  private Boolean upgradeAllowed = null;

  @SerializedName("cutoff")
  private Integer cutoff = null;

  @SerializedName("items")
  private List<Object> items = new ArrayList<>();

  @SerializedName("minFormatScore")
  private Integer minFormatScore = null;

  @SerializedName("cutoffFormatScore")
  private Integer cutoffFormatScore = null;

  @SerializedName("formatItems")
  private List<QualityProfileFormatItems> formatItems = new ArrayList<>();

  @SerializedName("language")
  private QueuedetailsLanguages language = null;

  @SerializedName("id")
  private Integer id = null;

  public QualityProfile name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public QualityProfile upgradeAllowed(Boolean upgradeAllowed) {
    this.upgradeAllowed = upgradeAllowed;
    return this;
  }

   /**
   * Get upgradeAllowed
   * @return upgradeAllowed
  **/
  @Schema(required = true, description = "")
  public Boolean isUpgradeAllowed() {
    return upgradeAllowed;
  }

  public void setUpgradeAllowed(Boolean upgradeAllowed) {
    this.upgradeAllowed = upgradeAllowed;
  }

  public QualityProfile cutoff(Integer cutoff) {
    this.cutoff = cutoff;
    return this;
  }

   /**
   * Get cutoff
   * @return cutoff
  **/
  @Schema(required = true, description = "")
  public Integer getCutoff() {
    return cutoff;
  }

  public void setCutoff(Integer cutoff) {
    this.cutoff = cutoff;
  }

  public QualityProfile items(List<Object> items) {
    this.items = items;
    return this;
  }

  public QualityProfile addItemsItem(Object itemsItem) {
    this.items.add(itemsItem);
    return this;
  }

   /**
   * Get items
   * @return items
  **/
  @Schema(required = true, description = "")
  public List<Object> getItems() {
    return items;
  }

  public void setItems(List<Object> items) {
    this.items = items;
  }

  public QualityProfile minFormatScore(Integer minFormatScore) {
    this.minFormatScore = minFormatScore;
    return this;
  }

   /**
   * Get minFormatScore
   * @return minFormatScore
  **/
  @Schema(required = true, description = "")
  public Integer getMinFormatScore() {
    return minFormatScore;
  }

  public void setMinFormatScore(Integer minFormatScore) {
    this.minFormatScore = minFormatScore;
  }

  public QualityProfile cutoffFormatScore(Integer cutoffFormatScore) {
    this.cutoffFormatScore = cutoffFormatScore;
    return this;
  }

   /**
   * Get cutoffFormatScore
   * @return cutoffFormatScore
  **/
  @Schema(required = true, description = "")
  public Integer getCutoffFormatScore() {
    return cutoffFormatScore;
  }

  public void setCutoffFormatScore(Integer cutoffFormatScore) {
    this.cutoffFormatScore = cutoffFormatScore;
  }

  public QualityProfile formatItems(List<QualityProfileFormatItems> formatItems) {
    this.formatItems = formatItems;
    return this;
  }

  public QualityProfile addFormatItemsItem(QualityProfileFormatItems formatItemsItem) {
    this.formatItems.add(formatItemsItem);
    return this;
  }

   /**
   * Get formatItems
   * @return formatItems
  **/
  @Schema(required = true, description = "")
  public List<QualityProfileFormatItems> getFormatItems() {
    return formatItems;
  }

  public void setFormatItems(List<QualityProfileFormatItems> formatItems) {
    this.formatItems = formatItems;
  }

  public QualityProfile language(QueuedetailsLanguages language) {
    this.language = language;
    return this;
  }

   /**
   * Get language
   * @return language
  **/
  @Schema(required = true, description = "")
  public QueuedetailsLanguages getLanguage() {
    return language;
  }

  public void setLanguage(QueuedetailsLanguages language) {
    this.language = language;
  }

  public QualityProfile id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(required = true, description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QualityProfile qualityProfile = (QualityProfile) o;
    return Objects.equals(this.name, qualityProfile.name) &&
        Objects.equals(this.upgradeAllowed, qualityProfile.upgradeAllowed) &&
        Objects.equals(this.cutoff, qualityProfile.cutoff) &&
        Objects.equals(this.items, qualityProfile.items) &&
        Objects.equals(this.minFormatScore, qualityProfile.minFormatScore) &&
        Objects.equals(this.cutoffFormatScore, qualityProfile.cutoffFormatScore) &&
        Objects.equals(this.formatItems, qualityProfile.formatItems) &&
        Objects.equals(this.language, qualityProfile.language) &&
        Objects.equals(this.id, qualityProfile.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, upgradeAllowed, cutoff, items, minFormatScore, cutoffFormatScore, formatItems, language, id);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QualityProfile {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    upgradeAllowed: ").append(toIndentedString(upgradeAllowed)).append("\n");
    sb.append("    cutoff: ").append(toIndentedString(cutoff)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    minFormatScore: ").append(toIndentedString(minFormatScore)).append("\n");
    sb.append("    cutoffFormatScore: ").append(toIndentedString(cutoffFormatScore)).append("\n");
    sb.append("    formatItems: ").append(toIndentedString(formatItems)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
