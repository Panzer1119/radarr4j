/*
 * Radarr
 * The way users should interact with Radarr programatically. To utilize any of these endpoints you will need a few pieces of information:  ex: localhost:7878/api/v3/movies?apiKey={key_here}  * url: localhost, 10.1.0.1, 192.168.1.1, etc * port: 7878 (unless you modify it) * apiKey: Located in Settings > General > Security
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package de.codemakers.radarr4j.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * InlineResponse20010
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-08-12T01:48:34.579+02:00[Europe/Berlin]")
public class InlineResponse20010 {
  @SerializedName("totalCount")
  private Integer totalCount = null;

  @SerializedName("count")
  private Integer count = null;

  @SerializedName("unknownCount")
  private Integer unknownCount = null;

  @SerializedName("errors")
  private Boolean errors = null;

  @SerializedName("warnings")
  private Boolean warnings = null;

  @SerializedName("unknownErrors")
  private Boolean unknownErrors = null;

  @SerializedName("unknownWarnings")
  private Boolean unknownWarnings = null;

  public InlineResponse20010 totalCount(Integer totalCount) {
    this.totalCount = totalCount;
    return this;
  }

   /**
   * Get totalCount
   * @return totalCount
  **/
  @Schema(required = true, description = "")
  public Integer getTotalCount() {
    return totalCount;
  }

  public void setTotalCount(Integer totalCount) {
    this.totalCount = totalCount;
  }

  public InlineResponse20010 count(Integer count) {
    this.count = count;
    return this;
  }

   /**
   * Get count
   * @return count
  **/
  @Schema(required = true, description = "")
  public Integer getCount() {
    return count;
  }

  public void setCount(Integer count) {
    this.count = count;
  }

  public InlineResponse20010 unknownCount(Integer unknownCount) {
    this.unknownCount = unknownCount;
    return this;
  }

   /**
   * Get unknownCount
   * @return unknownCount
  **/
  @Schema(required = true, description = "")
  public Integer getUnknownCount() {
    return unknownCount;
  }

  public void setUnknownCount(Integer unknownCount) {
    this.unknownCount = unknownCount;
  }

  public InlineResponse20010 errors(Boolean errors) {
    this.errors = errors;
    return this;
  }

   /**
   * Get errors
   * @return errors
  **/
  @Schema(required = true, description = "")
  public Boolean isErrors() {
    return errors;
  }

  public void setErrors(Boolean errors) {
    this.errors = errors;
  }

  public InlineResponse20010 warnings(Boolean warnings) {
    this.warnings = warnings;
    return this;
  }

   /**
   * Get warnings
   * @return warnings
  **/
  @Schema(required = true, description = "")
  public Boolean isWarnings() {
    return warnings;
  }

  public void setWarnings(Boolean warnings) {
    this.warnings = warnings;
  }

  public InlineResponse20010 unknownErrors(Boolean unknownErrors) {
    this.unknownErrors = unknownErrors;
    return this;
  }

   /**
   * Get unknownErrors
   * @return unknownErrors
  **/
  @Schema(required = true, description = "")
  public Boolean isUnknownErrors() {
    return unknownErrors;
  }

  public void setUnknownErrors(Boolean unknownErrors) {
    this.unknownErrors = unknownErrors;
  }

  public InlineResponse20010 unknownWarnings(Boolean unknownWarnings) {
    this.unknownWarnings = unknownWarnings;
    return this;
  }

   /**
   * Get unknownWarnings
   * @return unknownWarnings
  **/
  @Schema(required = true, description = "")
  public Boolean isUnknownWarnings() {
    return unknownWarnings;
  }

  public void setUnknownWarnings(Boolean unknownWarnings) {
    this.unknownWarnings = unknownWarnings;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20010 inlineResponse20010 = (InlineResponse20010) o;
    return Objects.equals(this.totalCount, inlineResponse20010.totalCount) &&
        Objects.equals(this.count, inlineResponse20010.count) &&
        Objects.equals(this.unknownCount, inlineResponse20010.unknownCount) &&
        Objects.equals(this.errors, inlineResponse20010.errors) &&
        Objects.equals(this.warnings, inlineResponse20010.warnings) &&
        Objects.equals(this.unknownErrors, inlineResponse20010.unknownErrors) &&
        Objects.equals(this.unknownWarnings, inlineResponse20010.unknownWarnings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(totalCount, count, unknownCount, errors, warnings, unknownErrors, unknownWarnings);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20010 {\n");
    
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    unknownCount: ").append(toIndentedString(unknownCount)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    warnings: ").append(toIndentedString(warnings)).append("\n");
    sb.append("    unknownErrors: ").append(toIndentedString(unknownErrors)).append("\n");
    sb.append("    unknownWarnings: ").append(toIndentedString(unknownWarnings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
