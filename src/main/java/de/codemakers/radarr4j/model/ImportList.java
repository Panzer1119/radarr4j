/*
 * Radarr
 * The way users should interact with Radarr programatically. To utilize any of these endpoints you will need a few pieces of information:  ex: localhost:7878/api/v3/movies?apiKey={key_here}  * url: localhost, 10.1.0.1, 192.168.1.1, etc * port: 7878 (unless you modify it) * apiKey: Located in Settings > General > Security
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package de.codemakers.radarr4j.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.codemakers.radarr4j.model.ProviderField;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
/**
 * ImportList
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-08-12T01:48:34.579+02:00[Europe/Berlin]")
public class ImportList {
  @SerializedName("enabled")
  private Boolean enabled = null;

  @SerializedName("enableAuto")
  private Boolean enableAuto = null;

  @SerializedName("shouldMonitor")
  private Boolean shouldMonitor = null;

  @SerializedName("rootFolderPath")
  private String rootFolderPath = null;

  @SerializedName("qualityProfileId")
  private BigDecimal qualityProfileId = null;

  @SerializedName("searchOnAdd")
  private Boolean searchOnAdd = null;

  @SerializedName("minimumAvailability")
  private String minimumAvailability = null;

  @SerializedName("listType")
  private String listType = null;

  @SerializedName("listOrder")
  private BigDecimal listOrder = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("fields")
  private List<ProviderField> fields = new ArrayList<>();

  @SerializedName("implementationName")
  private String implementationName = null;

  @SerializedName("implementation")
  private String implementation = null;

  @SerializedName("configContract")
  private String configContract = null;

  @SerializedName("infoLink")
  private String infoLink = null;

  @SerializedName("tags")
  private List<Integer> tags = new ArrayList<>();

  @SerializedName("id")
  private Integer id = null;

  public ImportList enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @Schema(required = true, description = "")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public ImportList enableAuto(Boolean enableAuto) {
    this.enableAuto = enableAuto;
    return this;
  }

   /**
   * Get enableAuto
   * @return enableAuto
  **/
  @Schema(required = true, description = "")
  public Boolean isEnableAuto() {
    return enableAuto;
  }

  public void setEnableAuto(Boolean enableAuto) {
    this.enableAuto = enableAuto;
  }

  public ImportList shouldMonitor(Boolean shouldMonitor) {
    this.shouldMonitor = shouldMonitor;
    return this;
  }

   /**
   * Get shouldMonitor
   * @return shouldMonitor
  **/
  @Schema(required = true, description = "")
  public Boolean isShouldMonitor() {
    return shouldMonitor;
  }

  public void setShouldMonitor(Boolean shouldMonitor) {
    this.shouldMonitor = shouldMonitor;
  }

  public ImportList rootFolderPath(String rootFolderPath) {
    this.rootFolderPath = rootFolderPath;
    return this;
  }

   /**
   * Get rootFolderPath
   * @return rootFolderPath
  **/
  @Schema(required = true, description = "")
  public String getRootFolderPath() {
    return rootFolderPath;
  }

  public void setRootFolderPath(String rootFolderPath) {
    this.rootFolderPath = rootFolderPath;
  }

  public ImportList qualityProfileId(BigDecimal qualityProfileId) {
    this.qualityProfileId = qualityProfileId;
    return this;
  }

   /**
   * Get qualityProfileId
   * @return qualityProfileId
  **/
  @Schema(required = true, description = "")
  public BigDecimal getQualityProfileId() {
    return qualityProfileId;
  }

  public void setQualityProfileId(BigDecimal qualityProfileId) {
    this.qualityProfileId = qualityProfileId;
  }

  public ImportList searchOnAdd(Boolean searchOnAdd) {
    this.searchOnAdd = searchOnAdd;
    return this;
  }

   /**
   * Get searchOnAdd
   * @return searchOnAdd
  **/
  @Schema(required = true, description = "")
  public Boolean isSearchOnAdd() {
    return searchOnAdd;
  }

  public void setSearchOnAdd(Boolean searchOnAdd) {
    this.searchOnAdd = searchOnAdd;
  }

  public ImportList minimumAvailability(String minimumAvailability) {
    this.minimumAvailability = minimumAvailability;
    return this;
  }

   /**
   * Get minimumAvailability
   * @return minimumAvailability
  **/
  @Schema(required = true, description = "")
  public String getMinimumAvailability() {
    return minimumAvailability;
  }

  public void setMinimumAvailability(String minimumAvailability) {
    this.minimumAvailability = minimumAvailability;
  }

  public ImportList listType(String listType) {
    this.listType = listType;
    return this;
  }

   /**
   * Get listType
   * @return listType
  **/
  @Schema(required = true, description = "")
  public String getListType() {
    return listType;
  }

  public void setListType(String listType) {
    this.listType = listType;
  }

  public ImportList listOrder(BigDecimal listOrder) {
    this.listOrder = listOrder;
    return this;
  }

   /**
   * Get listOrder
   * @return listOrder
  **/
  @Schema(required = true, description = "")
  public BigDecimal getListOrder() {
    return listOrder;
  }

  public void setListOrder(BigDecimal listOrder) {
    this.listOrder = listOrder;
  }

  public ImportList name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ImportList fields(List<ProviderField> fields) {
    this.fields = fields;
    return this;
  }

  public ImportList addFieldsItem(ProviderField fieldsItem) {
    this.fields.add(fieldsItem);
    return this;
  }

   /**
   * Get fields
   * @return fields
  **/
  @Schema(required = true, description = "")
  public List<ProviderField> getFields() {
    return fields;
  }

  public void setFields(List<ProviderField> fields) {
    this.fields = fields;
  }

  public ImportList implementationName(String implementationName) {
    this.implementationName = implementationName;
    return this;
  }

   /**
   * Get implementationName
   * @return implementationName
  **/
  @Schema(required = true, description = "")
  public String getImplementationName() {
    return implementationName;
  }

  public void setImplementationName(String implementationName) {
    this.implementationName = implementationName;
  }

  public ImportList implementation(String implementation) {
    this.implementation = implementation;
    return this;
  }

   /**
   * Get implementation
   * @return implementation
  **/
  @Schema(required = true, description = "")
  public String getImplementation() {
    return implementation;
  }

  public void setImplementation(String implementation) {
    this.implementation = implementation;
  }

  public ImportList configContract(String configContract) {
    this.configContract = configContract;
    return this;
  }

   /**
   * Get configContract
   * @return configContract
  **/
  @Schema(required = true, description = "")
  public String getConfigContract() {
    return configContract;
  }

  public void setConfigContract(String configContract) {
    this.configContract = configContract;
  }

  public ImportList infoLink(String infoLink) {
    this.infoLink = infoLink;
    return this;
  }

   /**
   * Get infoLink
   * @return infoLink
  **/
  @Schema(required = true, description = "")
  public String getInfoLink() {
    return infoLink;
  }

  public void setInfoLink(String infoLink) {
    this.infoLink = infoLink;
  }

  public ImportList tags(List<Integer> tags) {
    this.tags = tags;
    return this;
  }

  public ImportList addTagsItem(Integer tagsItem) {
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Schema(required = true, description = "")
  public List<Integer> getTags() {
    return tags;
  }

  public void setTags(List<Integer> tags) {
    this.tags = tags;
  }

  public ImportList id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(required = true, description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ImportList importList = (ImportList) o;
    return Objects.equals(this.enabled, importList.enabled) &&
        Objects.equals(this.enableAuto, importList.enableAuto) &&
        Objects.equals(this.shouldMonitor, importList.shouldMonitor) &&
        Objects.equals(this.rootFolderPath, importList.rootFolderPath) &&
        Objects.equals(this.qualityProfileId, importList.qualityProfileId) &&
        Objects.equals(this.searchOnAdd, importList.searchOnAdd) &&
        Objects.equals(this.minimumAvailability, importList.minimumAvailability) &&
        Objects.equals(this.listType, importList.listType) &&
        Objects.equals(this.listOrder, importList.listOrder) &&
        Objects.equals(this.name, importList.name) &&
        Objects.equals(this.fields, importList.fields) &&
        Objects.equals(this.implementationName, importList.implementationName) &&
        Objects.equals(this.implementation, importList.implementation) &&
        Objects.equals(this.configContract, importList.configContract) &&
        Objects.equals(this.infoLink, importList.infoLink) &&
        Objects.equals(this.tags, importList.tags) &&
        Objects.equals(this.id, importList.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enabled, enableAuto, shouldMonitor, rootFolderPath, qualityProfileId, searchOnAdd, minimumAvailability, listType, listOrder, name, fields, implementationName, implementation, configContract, infoLink, tags, id);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ImportList {\n");
    
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    enableAuto: ").append(toIndentedString(enableAuto)).append("\n");
    sb.append("    shouldMonitor: ").append(toIndentedString(shouldMonitor)).append("\n");
    sb.append("    rootFolderPath: ").append(toIndentedString(rootFolderPath)).append("\n");
    sb.append("    qualityProfileId: ").append(toIndentedString(qualityProfileId)).append("\n");
    sb.append("    searchOnAdd: ").append(toIndentedString(searchOnAdd)).append("\n");
    sb.append("    minimumAvailability: ").append(toIndentedString(minimumAvailability)).append("\n");
    sb.append("    listType: ").append(toIndentedString(listType)).append("\n");
    sb.append("    listOrder: ").append(toIndentedString(listOrder)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    implementationName: ").append(toIndentedString(implementationName)).append("\n");
    sb.append("    implementation: ").append(toIndentedString(implementation)).append("\n");
    sb.append("    configContract: ").append(toIndentedString(configContract)).append("\n");
    sb.append("    infoLink: ").append(toIndentedString(infoLink)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
