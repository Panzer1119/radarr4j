/*
 * Radarr
 * The way users should interact with Radarr programatically. To utilize any of these endpoints you will need a few pieces of information:  ex: localhost:7878/api/v3/movies?apiKey={key_here}  * url: localhost, 10.1.0.1, 192.168.1.1, etc * port: 7878 (unless you modify it) * apiKey: Located in Settings > General > Security
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package de.codemakers.radarr4j.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.codemakers.radarr4j.model.CustomFormat;
import de.codemakers.radarr4j.model.HistoryLanguages;
import de.codemakers.radarr4j.model.Quality;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
/**
 * History
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-08-12T01:48:34.579+02:00[Europe/Berlin]")
public class History {
  @SerializedName("movieId")
  private BigDecimal movieId = null;

  @SerializedName("sourceTitle")
  private String sourceTitle = null;

  @SerializedName("languages")
  private List<HistoryLanguages> languages = new ArrayList<>();

  @SerializedName("quality")
  private Quality quality = null;

  @SerializedName("customFormats")
  private List<CustomFormat> customFormats = new ArrayList<>();

  @SerializedName("qualityCutoffNotMet")
  private Boolean qualityCutoffNotMet = null;

  @SerializedName("date")
  private String date = null;

  @SerializedName("downloadId")
  private String downloadId = null;

  @SerializedName("eventType")
  private String eventType = null;

  @SerializedName("data")
  private Object data = null;

  @SerializedName("id")
  private BigDecimal id = null;

  public History movieId(BigDecimal movieId) {
    this.movieId = movieId;
    return this;
  }

   /**
   * Get movieId
   * @return movieId
  **/
  @Schema(required = true, description = "")
  public BigDecimal getMovieId() {
    return movieId;
  }

  public void setMovieId(BigDecimal movieId) {
    this.movieId = movieId;
  }

  public History sourceTitle(String sourceTitle) {
    this.sourceTitle = sourceTitle;
    return this;
  }

   /**
   * Get sourceTitle
   * @return sourceTitle
  **/
  @Schema(required = true, description = "")
  public String getSourceTitle() {
    return sourceTitle;
  }

  public void setSourceTitle(String sourceTitle) {
    this.sourceTitle = sourceTitle;
  }

  public History languages(List<HistoryLanguages> languages) {
    this.languages = languages;
    return this;
  }

  public History addLanguagesItem(HistoryLanguages languagesItem) {
    this.languages.add(languagesItem);
    return this;
  }

   /**
   * Get languages
   * @return languages
  **/
  @Schema(required = true, description = "")
  public List<HistoryLanguages> getLanguages() {
    return languages;
  }

  public void setLanguages(List<HistoryLanguages> languages) {
    this.languages = languages;
  }

  public History quality(Quality quality) {
    this.quality = quality;
    return this;
  }

   /**
   * Get quality
   * @return quality
  **/
  @Schema(required = true, description = "")
  public Quality getQuality() {
    return quality;
  }

  public void setQuality(Quality quality) {
    this.quality = quality;
  }

  public History customFormats(List<CustomFormat> customFormats) {
    this.customFormats = customFormats;
    return this;
  }

  public History addCustomFormatsItem(CustomFormat customFormatsItem) {
    this.customFormats.add(customFormatsItem);
    return this;
  }

   /**
   * Get customFormats
   * @return customFormats
  **/
  @Schema(required = true, description = "")
  public List<CustomFormat> getCustomFormats() {
    return customFormats;
  }

  public void setCustomFormats(List<CustomFormat> customFormats) {
    this.customFormats = customFormats;
  }

  public History qualityCutoffNotMet(Boolean qualityCutoffNotMet) {
    this.qualityCutoffNotMet = qualityCutoffNotMet;
    return this;
  }

   /**
   * Get qualityCutoffNotMet
   * @return qualityCutoffNotMet
  **/
  @Schema(required = true, description = "")
  public Boolean isQualityCutoffNotMet() {
    return qualityCutoffNotMet;
  }

  public void setQualityCutoffNotMet(Boolean qualityCutoffNotMet) {
    this.qualityCutoffNotMet = qualityCutoffNotMet;
  }

  public History date(String date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @Schema(required = true, description = "")
  public String getDate() {
    return date;
  }

  public void setDate(String date) {
    this.date = date;
  }

  public History downloadId(String downloadId) {
    this.downloadId = downloadId;
    return this;
  }

   /**
   * Get downloadId
   * @return downloadId
  **/
  @Schema(required = true, description = "")
  public String getDownloadId() {
    return downloadId;
  }

  public void setDownloadId(String downloadId) {
    this.downloadId = downloadId;
  }

  public History eventType(String eventType) {
    this.eventType = eventType;
    return this;
  }

   /**
   * Get eventType
   * @return eventType
  **/
  @Schema(required = true, description = "")
  public String getEventType() {
    return eventType;
  }

  public void setEventType(String eventType) {
    this.eventType = eventType;
  }

  public History data(Object data) {
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @Schema(required = true, description = "")
  public Object getData() {
    return data;
  }

  public void setData(Object data) {
    this.data = data;
  }

  public History id(BigDecimal id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(required = true, description = "")
  public BigDecimal getId() {
    return id;
  }

  public void setId(BigDecimal id) {
    this.id = id;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    History history = (History) o;
    return Objects.equals(this.movieId, history.movieId) &&
        Objects.equals(this.sourceTitle, history.sourceTitle) &&
        Objects.equals(this.languages, history.languages) &&
        Objects.equals(this.quality, history.quality) &&
        Objects.equals(this.customFormats, history.customFormats) &&
        Objects.equals(this.qualityCutoffNotMet, history.qualityCutoffNotMet) &&
        Objects.equals(this.date, history.date) &&
        Objects.equals(this.downloadId, history.downloadId) &&
        Objects.equals(this.eventType, history.eventType) &&
        Objects.equals(this.data, history.data) &&
        Objects.equals(this.id, history.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(movieId, sourceTitle, languages, quality, customFormats, qualityCutoffNotMet, date, downloadId, eventType, data, id);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class History {\n");
    
    sb.append("    movieId: ").append(toIndentedString(movieId)).append("\n");
    sb.append("    sourceTitle: ").append(toIndentedString(sourceTitle)).append("\n");
    sb.append("    languages: ").append(toIndentedString(languages)).append("\n");
    sb.append("    quality: ").append(toIndentedString(quality)).append("\n");
    sb.append("    customFormats: ").append(toIndentedString(customFormats)).append("\n");
    sb.append("    qualityCutoffNotMet: ").append(toIndentedString(qualityCutoffNotMet)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    downloadId: ").append(toIndentedString(downloadId)).append("\n");
    sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
