/*
 * Radarr
 * The way users should interact with Radarr programatically. To utilize any of these endpoints you will need a few pieces of information:  ex: localhost:7878/api/v3/movies?apiKey={key_here}  * url: localhost, 10.1.0.1, 192.168.1.1, etc * port: 7878 (unless you modify it) * apiKey: Located in Settings > General > Security
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package de.codemakers.radarr4j.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.codemakers.radarr4j.model.HistoryLanguages;
import de.codemakers.radarr4j.model.MovieFileMediaInfo;
import de.codemakers.radarr4j.model.Quality;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
/**
 * MovieFile
 */

public class MovieFile {
  @SerializedName("movieId")
  private Integer movieId = null;

  @SerializedName("relativePath")
  private String relativePath = null;

  @SerializedName("path")
  private String path = null;

  @SerializedName("size")
  private BigDecimal size = null;

  @SerializedName("dateAdded")
  private String dateAdded = null;

  @SerializedName("indexerFlags")
  private Integer indexerFlags = null;

  @SerializedName("quality")
  private Quality quality = null;

  @SerializedName("mediaInfo")
  private MovieFileMediaInfo mediaInfo = null;

  @SerializedName("qualityCutoffNotMet")
  private Boolean qualityCutoffNotMet = null;

  @SerializedName("languages")
  private List<HistoryLanguages> languages = new ArrayList<>();

  @SerializedName("releaseGroup")
  private String releaseGroup = null;

  @SerializedName("id")
  private Integer id = null;

  public MovieFile movieId(Integer movieId) {
    this.movieId = movieId;
    return this;
  }

   /**
   * Get movieId
   * @return movieId
  **/
  @Schema(required = true, description = "")
  public Integer getMovieId() {
    return movieId;
  }

  public void setMovieId(Integer movieId) {
    this.movieId = movieId;
  }

  public MovieFile relativePath(String relativePath) {
    this.relativePath = relativePath;
    return this;
  }

   /**
   * Get relativePath
   * @return relativePath
  **/
  @Schema(required = true, description = "")
  public String getRelativePath() {
    return relativePath;
  }

  public void setRelativePath(String relativePath) {
    this.relativePath = relativePath;
  }

  public MovieFile path(String path) {
    this.path = path;
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @Schema(required = true, description = "")
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }

  public MovieFile size(BigDecimal size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @Schema(required = true, description = "")
  public BigDecimal getSize() {
    return size;
  }

  public void setSize(BigDecimal size) {
    this.size = size;
  }

  public MovieFile dateAdded(String dateAdded) {
    this.dateAdded = dateAdded;
    return this;
  }

   /**
   * Get dateAdded
   * @return dateAdded
  **/
  @Schema(required = true, description = "")
  public String getDateAdded() {
    return dateAdded;
  }

  public void setDateAdded(String dateAdded) {
    this.dateAdded = dateAdded;
  }

  public MovieFile indexerFlags(Integer indexerFlags) {
    this.indexerFlags = indexerFlags;
    return this;
  }

   /**
   * Get indexerFlags
   * @return indexerFlags
  **/
  @Schema(required = true, description = "")
  public Integer getIndexerFlags() {
    return indexerFlags;
  }

  public void setIndexerFlags(Integer indexerFlags) {
    this.indexerFlags = indexerFlags;
  }

  public MovieFile quality(Quality quality) {
    this.quality = quality;
    return this;
  }

   /**
   * Get quality
   * @return quality
  **/
  @Schema(required = true, description = "")
  public Quality getQuality() {
    return quality;
  }

  public void setQuality(Quality quality) {
    this.quality = quality;
  }

  public MovieFile mediaInfo(MovieFileMediaInfo mediaInfo) {
    this.mediaInfo = mediaInfo;
    return this;
  }

   /**
   * Get mediaInfo
   * @return mediaInfo
  **/
  @Schema(required = true, description = "")
  public MovieFileMediaInfo getMediaInfo() {
    return mediaInfo;
  }

  public void setMediaInfo(MovieFileMediaInfo mediaInfo) {
    this.mediaInfo = mediaInfo;
  }

  public MovieFile qualityCutoffNotMet(Boolean qualityCutoffNotMet) {
    this.qualityCutoffNotMet = qualityCutoffNotMet;
    return this;
  }

   /**
   * Get qualityCutoffNotMet
   * @return qualityCutoffNotMet
  **/
  @Schema(required = true, description = "")
  public Boolean isQualityCutoffNotMet() {
    return qualityCutoffNotMet;
  }

  public void setQualityCutoffNotMet(Boolean qualityCutoffNotMet) {
    this.qualityCutoffNotMet = qualityCutoffNotMet;
  }

  public MovieFile languages(List<HistoryLanguages> languages) {
    this.languages = languages;
    return this;
  }

  public MovieFile addLanguagesItem(HistoryLanguages languagesItem) {
    this.languages.add(languagesItem);
    return this;
  }

   /**
   * Get languages
   * @return languages
  **/
  @Schema(required = true, description = "")
  public List<HistoryLanguages> getLanguages() {
    return languages;
  }

  public void setLanguages(List<HistoryLanguages> languages) {
    this.languages = languages;
  }

  public MovieFile releaseGroup(String releaseGroup) {
    this.releaseGroup = releaseGroup;
    return this;
  }

   /**
   * Get releaseGroup
   * @return releaseGroup
  **/
  @Schema(required = true, description = "")
  public String getReleaseGroup() {
    return releaseGroup;
  }

  public void setReleaseGroup(String releaseGroup) {
    this.releaseGroup = releaseGroup;
  }

  public MovieFile id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(required = true, description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MovieFile movieFile = (MovieFile) o;
    return Objects.equals(this.movieId, movieFile.movieId) &&
        Objects.equals(this.relativePath, movieFile.relativePath) &&
        Objects.equals(this.path, movieFile.path) &&
        Objects.equals(this.size, movieFile.size) &&
        Objects.equals(this.dateAdded, movieFile.dateAdded) &&
        Objects.equals(this.indexerFlags, movieFile.indexerFlags) &&
        Objects.equals(this.quality, movieFile.quality) &&
        Objects.equals(this.mediaInfo, movieFile.mediaInfo) &&
        Objects.equals(this.qualityCutoffNotMet, movieFile.qualityCutoffNotMet) &&
        Objects.equals(this.languages, movieFile.languages) &&
        Objects.equals(this.releaseGroup, movieFile.releaseGroup) &&
        Objects.equals(this.id, movieFile.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(movieId, relativePath, path, size, dateAdded, indexerFlags, quality, mediaInfo, qualityCutoffNotMet, languages, releaseGroup, id);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MovieFile {\n");
    
    sb.append("    movieId: ").append(toIndentedString(movieId)).append("\n");
    sb.append("    relativePath: ").append(toIndentedString(relativePath)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    dateAdded: ").append(toIndentedString(dateAdded)).append("\n");
    sb.append("    indexerFlags: ").append(toIndentedString(indexerFlags)).append("\n");
    sb.append("    quality: ").append(toIndentedString(quality)).append("\n");
    sb.append("    mediaInfo: ").append(toIndentedString(mediaInfo)).append("\n");
    sb.append("    qualityCutoffNotMet: ").append(toIndentedString(qualityCutoffNotMet)).append("\n");
    sb.append("    languages: ").append(toIndentedString(languages)).append("\n");
    sb.append("    releaseGroup: ").append(toIndentedString(releaseGroup)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
