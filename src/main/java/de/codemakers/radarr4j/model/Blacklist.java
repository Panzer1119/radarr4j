/*
 * Radarr
 * The way users should interact with Radarr programatically. To utilize any of these endpoints you will need a few pieces of information:  ex: localhost:7878/api/v3/movies?apiKey={key_here}  * url: localhost, 10.1.0.1, 192.168.1.1, etc * port: 7878 (unless you modify it) * apiKey: Located in Settings > General > Security
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package de.codemakers.radarr4j.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.codemakers.radarr4j.model.CustomFormat;
import de.codemakers.radarr4j.model.HistoryLanguages;
import de.codemakers.radarr4j.model.Quality;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
/**
 * Blacklist
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-08-12T01:48:34.579+02:00[Europe/Berlin]")
public class Blacklist {
  @SerializedName("movieId")
  private BigDecimal movieId = null;

  @SerializedName("sourceTitle")
  private String sourceTitle = null;

  @SerializedName("languages")
  private List<HistoryLanguages> languages = new ArrayList<>();

  @SerializedName("quality")
  private Quality quality = null;

  @SerializedName("customFormats")
  private List<CustomFormat> customFormats = new ArrayList<>();

  @SerializedName("date")
  private String date = null;

  @SerializedName("protocol")
  private String protocol = null;

  @SerializedName("indexer")
  private String indexer = null;

  @SerializedName("message")
  private String message = null;

  @SerializedName("id")
  private BigDecimal id = null;

  public Blacklist movieId(BigDecimal movieId) {
    this.movieId = movieId;
    return this;
  }

   /**
   * Get movieId
   * @return movieId
  **/
  @Schema(required = true, description = "")
  public BigDecimal getMovieId() {
    return movieId;
  }

  public void setMovieId(BigDecimal movieId) {
    this.movieId = movieId;
  }

  public Blacklist sourceTitle(String sourceTitle) {
    this.sourceTitle = sourceTitle;
    return this;
  }

   /**
   * Get sourceTitle
   * @return sourceTitle
  **/
  @Schema(required = true, description = "")
  public String getSourceTitle() {
    return sourceTitle;
  }

  public void setSourceTitle(String sourceTitle) {
    this.sourceTitle = sourceTitle;
  }

  public Blacklist languages(List<HistoryLanguages> languages) {
    this.languages = languages;
    return this;
  }

  public Blacklist addLanguagesItem(HistoryLanguages languagesItem) {
    this.languages.add(languagesItem);
    return this;
  }

   /**
   * Get languages
   * @return languages
  **/
  @Schema(required = true, description = "")
  public List<HistoryLanguages> getLanguages() {
    return languages;
  }

  public void setLanguages(List<HistoryLanguages> languages) {
    this.languages = languages;
  }

  public Blacklist quality(Quality quality) {
    this.quality = quality;
    return this;
  }

   /**
   * Get quality
   * @return quality
  **/
  @Schema(required = true, description = "")
  public Quality getQuality() {
    return quality;
  }

  public void setQuality(Quality quality) {
    this.quality = quality;
  }

  public Blacklist customFormats(List<CustomFormat> customFormats) {
    this.customFormats = customFormats;
    return this;
  }

  public Blacklist addCustomFormatsItem(CustomFormat customFormatsItem) {
    this.customFormats.add(customFormatsItem);
    return this;
  }

   /**
   * Get customFormats
   * @return customFormats
  **/
  @Schema(required = true, description = "")
  public List<CustomFormat> getCustomFormats() {
    return customFormats;
  }

  public void setCustomFormats(List<CustomFormat> customFormats) {
    this.customFormats = customFormats;
  }

  public Blacklist date(String date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @Schema(required = true, description = "")
  public String getDate() {
    return date;
  }

  public void setDate(String date) {
    this.date = date;
  }

  public Blacklist protocol(String protocol) {
    this.protocol = protocol;
    return this;
  }

   /**
   * Get protocol
   * @return protocol
  **/
  @Schema(required = true, description = "")
  public String getProtocol() {
    return protocol;
  }

  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }

  public Blacklist indexer(String indexer) {
    this.indexer = indexer;
    return this;
  }

   /**
   * Get indexer
   * @return indexer
  **/
  @Schema(required = true, description = "")
  public String getIndexer() {
    return indexer;
  }

  public void setIndexer(String indexer) {
    this.indexer = indexer;
  }

  public Blacklist message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @Schema(required = true, description = "")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public Blacklist id(BigDecimal id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(required = true, description = "")
  public BigDecimal getId() {
    return id;
  }

  public void setId(BigDecimal id) {
    this.id = id;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Blacklist blacklist = (Blacklist) o;
    return Objects.equals(this.movieId, blacklist.movieId) &&
        Objects.equals(this.sourceTitle, blacklist.sourceTitle) &&
        Objects.equals(this.languages, blacklist.languages) &&
        Objects.equals(this.quality, blacklist.quality) &&
        Objects.equals(this.customFormats, blacklist.customFormats) &&
        Objects.equals(this.date, blacklist.date) &&
        Objects.equals(this.protocol, blacklist.protocol) &&
        Objects.equals(this.indexer, blacklist.indexer) &&
        Objects.equals(this.message, blacklist.message) &&
        Objects.equals(this.id, blacklist.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(movieId, sourceTitle, languages, quality, customFormats, date, protocol, indexer, message, id);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Blacklist {\n");
    
    sb.append("    movieId: ").append(toIndentedString(movieId)).append("\n");
    sb.append("    sourceTitle: ").append(toIndentedString(sourceTitle)).append("\n");
    sb.append("    languages: ").append(toIndentedString(languages)).append("\n");
    sb.append("    quality: ").append(toIndentedString(quality)).append("\n");
    sb.append("    customFormats: ").append(toIndentedString(customFormats)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    indexer: ").append(toIndentedString(indexer)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
